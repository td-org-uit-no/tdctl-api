version: "3.5"
services:
  tdctl_api:
    image: ghcr.io/td-org-uit-no/tdctl-api/tdctl-api:latest
    build:
      context: ../
      dockerfile: .docker/dockerfile.api.production
    environment:
      FLASK_APP_ENV: production
      DB_HOSTNAME: mongodb
      DB_PORT: 27017
      SECRET_KEY: thisisverysecret
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: tdctl
    networks:
      - backend
  nginx:
    build:
      context: ./
      dockerfile: dockerfile.nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend
    volumes: 
      - ./certbot/data/certbot/conf:/etc/letsencrypt
      - ./certbot/data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/data/certbot/conf:/etc/letsencrypt
      - ./certbot/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
